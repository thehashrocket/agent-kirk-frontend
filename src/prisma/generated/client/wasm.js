
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ClientActivityScalarFieldEnum = {
  id: 'id',
  type: 'type',
  description: 'description',
  status: 'status',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.ClientSatisfactionScalarFieldEnum = {
  id: 'id',
  rating: 'rating',
  feedback: 'feedback',
  userId: 'userId',
  accountRepId: 'accountRepId',
  createdAt: 'createdAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  title: 'title',
  isStarred: 'isStarred',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  description: 'description',
  gaAccountId: 'gaAccountId',
  gaPropertyId: 'gaPropertyId',
  clientId: 'clientId'
};

exports.Prisma.EmailCampaignScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  campaignId: 'campaignId',
  campaignName: 'campaignName',
  emailClientId: 'emailClientId'
};

exports.Prisma.EmailCampaignContentScalarFieldEnum = {
  id: 'id',
  subject: 'subject',
  type: 'type',
  recipients: 'recipients',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  contentType: 'contentType',
  createTime: 'createTime',
  emailCampaignId: 'emailCampaignId',
  htmlContent: 'htmlContent',
  plainContent: 'plainContent',
  sendTime: 'sendTime',
  webId: 'webId'
};

exports.Prisma.EmailCampaignDailyStatsScalarFieldEnum = {
  id: 'id',
  date: 'date',
  opens: 'opens',
  clicks: 'clicks',
  bounces: 'bounces',
  unsubscribes: 'unsubscribes',
  variation: 'variation',
  phase: 'phase',
  requests: 'requests',
  delivered: 'delivered',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  bounceDrops: 'bounceDrops',
  cumulativeBounceRate: 'cumulativeBounceRate',
  cumulativeSpamReportsRate: 'cumulativeSpamReportsRate',
  cumulativeTotalClickRate: 'cumulativeTotalClickRate',
  cumulativeTotalOpenRate: 'cumulativeTotalOpenRate',
  cumulativeUniqueClickRate: 'cumulativeUniqueClickRate',
  cumulativeUniqueOpenRate: 'cumulativeUniqueOpenRate',
  cumulativeUnsubscribeRate: 'cumulativeUnsubscribeRate',
  dailyBounceRate: 'dailyBounceRate',
  dailySpamReportsRate: 'dailySpamReportsRate',
  dailyTotalClickRate: 'dailyTotalClickRate',
  dailyTotalClickToOpenRate: 'dailyTotalClickToOpenRate',
  dailyTotalOpenRate: 'dailyTotalOpenRate',
  dailyUniqueClickRate: 'dailyUniqueClickRate',
  dailyUniqueClickToOpenRate: 'dailyUniqueClickToOpenRate',
  dailyUniqueOpenRate: 'dailyUniqueOpenRate',
  dailyUnsubscribeRate: 'dailyUnsubscribeRate',
  emailCampaignId: 'emailCampaignId',
  emailClientId: 'emailClientId',
  singleSendName: 'singleSendName',
  spamReportDrops: 'spamReportDrops',
  spamReports: 'spamReports',
  totalClicks: 'totalClicks',
  totalOpens: 'totalOpens',
  uniqueClicks: 'uniqueClicks',
  uniqueOpens: 'uniqueOpens'
};

exports.Prisma.EmailClientScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  clientName: 'clientName'
};

exports.Prisma.EmailClientCredentialsScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  apiKey: 'apiKey',
  emailClientId: 'emailClientId',
  platformName: 'platformName'
};

exports.Prisma.EmailGlobalDailyStatsScalarFieldEnum = {
  id: 'id',
  date: 'date',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  bounces: 'bounces',
  clicks: 'clicks',
  emailClientId: 'emailClientId',
  opens: 'opens',
  unsubs: 'unsubs'
};

exports.Prisma.GaAccountScalarFieldEnum = {
  id: 'id',
  gaAccountId: 'gaAccountId',
  gaAccountName: 'gaAccountName',
  deleted: 'deleted',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GaPropertyScalarFieldEnum = {
  id: 'id',
  gaPropertyId: 'gaPropertyId',
  gaPropertyName: 'gaPropertyName',
  gaAccountId: 'gaAccountId',
  deleted: 'deleted',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GaImportRunScalarFieldEnum = {
  id: 'id',
  gaPropertyId: 'gaPropertyId',
  dateStart: 'dateStart',
  dateEnd: 'dateEnd',
  status: 'status',
  errorMessage: 'errorMessage',
  requestedByUserId: 'requestedByUserId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GaKpiDailyScalarFieldEnum = {
  id: 'id',
  gaPropertyId: 'gaPropertyId',
  date: 'date',
  sessions: 'sessions',
  screenPageViewsPerSession: 'screenPageViewsPerSession',
  engagementRate: 'engagementRate',
  avgSessionDurationSec: 'avgSessionDurationSec',
  goalCompletions: 'goalCompletions',
  goalCompletionRate: 'goalCompletionRate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GaKpiMonthlyScalarFieldEnum = {
  id: 'id',
  gaPropertyId: 'gaPropertyId',
  month: 'month',
  sessions: 'sessions',
  screenPageViewsPerSession: 'screenPageViewsPerSession',
  engagementRate: 'engagementRate',
  avgSessionDurationSec: 'avgSessionDurationSec',
  goalCompletions: 'goalCompletions',
  goalCompletionRate: 'goalCompletionRate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GaChannelDailyScalarFieldEnum = {
  id: 'id',
  gaPropertyId: 'gaPropertyId',
  date: 'date',
  channelGroup: 'channelGroup',
  users: 'users',
  newUsers: 'newUsers',
  sessions: 'sessions',
  screenPageViewsPerSession: 'screenPageViewsPerSession',
  engagementRate: 'engagementRate',
  avgSessionDurationSec: 'avgSessionDurationSec',
  goalCompletions: 'goalCompletions',
  goalCompletionRate: 'goalCompletionRate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GaSourceDailyScalarFieldEnum = {
  id: 'id',
  avgSessionDurationSec: 'avgSessionDurationSec',
  date: 'date',
  engagementRate: 'engagementRate',
  gaPropertyId: 'gaPropertyId',
  goalCompletionRate: 'goalCompletionRate',
  goalCompletions: 'goalCompletions',
  newUsers: 'newUsers',
  screenPageViewsPerSession: 'screenPageViewsPerSession',
  sessions: 'sessions',
  trafficSource: 'trafficSource',
  users: 'users',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LogScalarFieldEnum = {
  id: 'id',
  eventMessage: 'eventMessage',
  eventType: 'eventType',
  errorMessage: 'errorMessage',
  errorStackTrace: 'errorStackTrace',
  message: 'message',
  metrics: 'metrics',
  nodeName: 'nodeName',
  payload: 'payload',
  queryId: 'queryId',
  sourceReferences: 'sourceReferences',
  userId: 'userId',
  workflowName: 'workflowName',
  environment: 'environment',
  serviceName: 'serviceName',
  version: 'version',
  requestId: 'requestId',
  sessionId: 'sessionId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  duration: 'duration',
  memoryUsage: 'memoryUsage',
  cpuUsage: 'cpuUsage',
  severity: 'severity',
  isAuthenticated: 'isAuthenticated',
  permissions: 'permissions',
  modelName: 'modelName',
  tokenUsage: 'tokenUsage',
  temperature: 'temperature',
  maxTokens: 'maxTokens',
  clientId: 'clientId',
  pageUrl: 'pageUrl',
  componentName: 'componentName',
  errorCode: 'errorCode',
  errorCategory: 'errorCategory',
  retryCount: 'retryCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MemoryScalarFieldEnum = {
  id: 'id',
  content: 'content',
  queryId: 'queryId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  content: 'content',
  senderId: 'senderId',
  recipientId: 'recipientId',
  isRead: 'isRead',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  archived: 'archived',
  isThreadStart: 'isThreadStart',
  parentId: 'parentId',
  threadId: 'threadId'
};

exports.Prisma.MessageAttachmentScalarFieldEnum = {
  id: 'id',
  filename: 'filename',
  fileSize: 'fileSize',
  mimeType: 'mimeType',
  url: 'url',
  createdAt: 'createdAt',
  messageId: 'messageId'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  title: 'title',
  content: 'content',
  isRead: 'isRead',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ParsedPieGraphDataScalarFieldEnum = {
  id: 'id',
  queryId: 'queryId',
  channel: 'channel',
  source: 'source',
  sessions: 'sessions',
  conversionRate: 'conversionRate',
  conversions: 'conversions',
  bounces: 'bounces',
  prevSessionsDiff: 'prevSessionsDiff',
  prevConversionRateDiff: 'prevConversionRateDiff',
  prevConversionsDiff: 'prevConversionsDiff',
  prevBouncesDiff: 'prevBouncesDiff',
  yearSessionsDiff: 'yearSessionsDiff',
  yearConversionRateDiff: 'yearConversionRateDiff',
  yearConversionsDiff: 'yearConversionsDiff',
  yearBouncesDiff: 'yearBouncesDiff',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ParsedQueryDataScalarFieldEnum = {
  id: 'id',
  queryId: 'queryId',
  date: 'date',
  channel: 'channel',
  source: 'source',
  sessions: 'sessions',
  conversionRate: 'conversionRate',
  conversions: 'conversions',
  bounces: 'bounces',
  createdAt: 'createdAt',
  bounceRate: 'bounceRate',
  engagedSessions: 'engagedSessions',
  newUsers: 'newUsers'
};

exports.Prisma.ParsedQuerySummaryScalarFieldEnum = {
  id: 'id',
  queryId: 'queryId',
  date: 'date',
  totalEngagedSessions: 'totalEngagedSessions',
  averageBounceRate: 'averageBounceRate',
  totalNewUsers: 'totalNewUsers',
  totalConversions: 'totalConversions',
  createdAt: 'createdAt'
};

exports.Prisma.QueryScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  response: 'response',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  content: 'content',
  status: 'status',
  conversationId: 'conversationId',
  rating: 'rating',
  metadata: 'metadata',
  lineGraphData: 'lineGraphData',
  pieGraphData: 'pieGraphData'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  expires: 'expires',
  sessionToken: 'sessionToken'
};

exports.Prisma.SproutFacebookAnalyticsScalarFieldEnum = {
  id: 'id',
  sproutSocialAccountId: 'sproutSocialAccountId',
  customerProfileId: 'customerProfileId',
  reportingDate: 'reportingDate',
  engagements: 'engagements',
  impressions: 'impressions',
  impressionsUnique: 'impressionsUnique',
  followersCount: 'followersCount',
  postContentClicks: 'postContentClicks',
  postContentClicksOther: 'postContentClicksOther',
  postLinkClicks: 'postLinkClicks',
  postPhotoViewClicks: 'postPhotoViewClicks',
  tabViews: 'tabViews',
  videoViews: 'videoViews',
  videoViews10s: 'videoViews10s',
  videoViewsOrganic: 'videoViewsOrganic',
  videoViewsPaid: 'videoViewsPaid',
  videoViewsUnique: 'videoViewsUnique',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  netFollowerGrowth: 'netFollowerGrowth'
};

exports.Prisma.SproutFacebookPostScalarFieldEnum = {
  id: 'id',
  sproutSocialAccountId: 'sproutSocialAccountId',
  postType: 'postType',
  postStatus: 'postStatus',
  postLink: 'postLink',
  postText: 'postText',
  postNativeId: 'postNativeId',
  postCreatedTime: 'postCreatedTime',
  postSentTime: 'postSentTime',
  postLastUpdated: 'postLastUpdated',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SproutFacebookPostAnalyticsScalarFieldEnum = {
  id: 'id',
  angryReactions: 'angryReactions',
  clientNativeId: 'clientNativeId',
  commentsCount: 'commentsCount',
  hahaReactions: 'hahaReactions',
  impressions: 'impressions',
  impressionsFollower: 'impressionsFollower',
  impressionsNonFollower: 'impressionsNonFollower',
  impressionsNonViral: 'impressionsNonViral',
  impressionsOrganic: 'impressionsOrganic',
  impressionsPaid: 'impressionsPaid',
  impressionsViral: 'impressionsViral',
  likes: 'likes',
  loveReactions: 'loveReactions',
  postContentClicks: 'postContentClicks',
  postContentClicksOther: 'postContentClicksOther',
  postLinkClicks: 'postLinkClicks',
  postNativeId: 'postNativeId',
  postPhotoViewClicks: 'postPhotoViewClicks',
  postVideoPlayClicks: 'postVideoPlayClicks',
  questionAnswers: 'questionAnswers',
  reach: 'reach',
  reachFollower: 'reachFollower',
  reachNonViral: 'reachNonViral',
  reachOrganic: 'reachOrganic',
  reachPaid: 'reachPaid',
  reachViral: 'reachViral',
  reactions: 'reactions',
  reportingDate: 'reportingDate',
  sadReactions: 'sadReactions',
  sharesCount: 'sharesCount',
  sproutSocialAccountId: 'sproutSocialAccountId',
  videoLength: 'videoLength',
  videoViews: 'videoViews',
  videoViewsAutoplay: 'videoViewsAutoplay',
  videoViewsOrganic: 'videoViewsOrganic',
  videoViewsPaid: 'videoViewsPaid',
  wowReactions: 'wowReactions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SproutInstagramAnalyticsScalarFieldEnum = {
  id: 'id',
  sproutSocialAccountId: 'sproutSocialAccountId',
  customerProfileId: 'customerProfileId',
  reportingDate: 'reportingDate',
  commentsCount: 'commentsCount',
  engagements: 'engagements',
  impressions: 'impressions',
  impressionsUnique: 'impressionsUnique',
  followersCount: 'followersCount',
  likes: 'likes',
  saves: 'saves',
  videoViews: 'videoViews',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  emailContacts: 'emailContacts',
  getDirectionsClicks: 'getDirectionsClicks',
  phoneCallClicks: 'phoneCallClicks',
  postsSendByContentType: 'postsSendByContentType',
  postsSentByPostType: 'postsSentByPostType',
  postsSentCount: 'postsSentCount',
  profileFollowerAdds: 'profileFollowerAdds',
  profileFollowers: 'profileFollowers',
  profileImpressionsUnique: 'profileImpressionsUnique',
  profileReachUnique: 'profileReachUnique',
  profileViews: 'profileViews',
  profileViewsUnique: 'profileViewsUnique',
  websiteClicks: 'websiteClicks'
};

exports.Prisma.SproutInstagramFollowersByCityScalarFieldEnum = {
  id: 'id',
  sproutInstagramAnalyticsId: 'sproutInstagramAnalyticsId',
  city: 'city',
  count: 'count',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SproutInstagramFollowersByCountryScalarFieldEnum = {
  id: 'id',
  sproutInstagramAnalyticsId: 'sproutInstagramAnalyticsId',
  country: 'country',
  count: 'count',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SproutLinkedInAnalyticsScalarFieldEnum = {
  id: 'id',
  sproutSocialAccountId: 'sproutSocialAccountId',
  customerProfileId: 'customerProfileId',
  reportingDate: 'reportingDate',
  engagements: 'engagements',
  impressions: 'impressions',
  impressionsUnique: 'impressionsUnique',
  followersCount: 'followersCount',
  reactions: 'reactions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SproutPinterestAnalyticsScalarFieldEnum = {
  id: 'id',
  sproutSocialAccountId: 'sproutSocialAccountId',
  customerProfileId: 'customerProfileId',
  reportingDate: 'reportingDate',
  followersCount: 'followersCount',
  followingCount: 'followingCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SproutSocialAccountScalarFieldEnum = {
  id: 'id',
  customerProfileId: 'customerProfileId',
  networkType: 'networkType',
  name: 'name',
  nativeName: 'nativeName',
  link: 'link',
  nativeId: 'nativeId',
  groups: 'groups',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TicketScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  status: 'status',
  priority: 'priority',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  assignedToId: 'assignedToId',
  clientId: 'clientId'
};

exports.Prisma.TicketAttachmentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  url: 'url',
  createdAt: 'createdAt',
  ticketId: 'ticketId'
};

exports.Prisma.TicketCommentScalarFieldEnum = {
  id: 'id',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ticketId: 'ticketId',
  authorId: 'authorId'
};

exports.Prisma.TicketTagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt'
};

exports.Prisma.UserToSproutSocialAccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  sproutSocialAccountId: 'sproutSocialAccountId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserToGaAccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  gaAccountId: 'gaAccountId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  roleId: 'roleId',
  emailVerified: 'emailVerified',
  image: 'image',
  name: 'name',
  accountRepId: 'accountRepId',
  isActive: 'isActive',
  password: 'password',
  deleted: 'deleted',
  companyId: 'companyId'
};

exports.Prisma.UserSettingsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  emailNotifications: 'emailNotifications',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  theme: 'theme',
  apiCredits: 'apiCredits',
  apiCreditsLimit: 'apiCreditsLimit'
};

exports.Prisma.UserToEmailClientScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  emailClientId: 'emailClientId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserToUspsClientScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  uspsClientId: 'uspsClientId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UspsCampaignScalarFieldEnum = {
  id: 'id',
  campaignName: 'campaignName',
  order: 'order',
  reportId: 'reportId',
  sector: 'sector',
  sendDate: 'sendDate',
  type: 'type',
  uspsClientId: 'uspsClientId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UspsCampaignSummaryScalarFieldEnum = {
  id: 'id',
  finalScanCount: 'finalScanCount',
  mailDate: 'mailDate',
  numberDelivered: 'numberDelivered',
  percentDelivered: 'percentDelivered',
  percentFinalScan: 'percentFinalScan',
  percentOnTime: 'percentOnTime',
  percentScanned: 'percentScanned',
  pieces: 'pieces',
  reportId: 'reportId',
  scanDate: 'scanDate',
  totalScanned: 'totalScanned',
  uspsCampaignId: 'uspsCampaignId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UspsCampaignZipStatsScalarFieldEnum = {
  id: 'id',
  date: 'date',
  scans: 'scans',
  uspsCampaignId: 'uspsCampaignId',
  zipCode: 'zipCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UspsClientScalarFieldEnum = {
  id: 'id',
  clientName: 'clientName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.ImportStatus = exports.$Enums.ImportStatus = {
  queued: 'queued',
  ok: 'ok',
  error: 'error'
};

exports.TicketStatus = exports.$Enums.TicketStatus = {
  OPEN: 'OPEN',
  IN_PROGRESS: 'IN_PROGRESS',
  RESOLVED: 'RESOLVED'
};

exports.TicketPriority = exports.$Enums.TicketPriority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH'
};

exports.ActivityStatus = exports.$Enums.ActivityStatus = {
  SUCCESS: 'SUCCESS',
  ERROR: 'ERROR',
  PENDING: 'PENDING'
};

exports.QueryStatus = exports.$Enums.QueryStatus = {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  SYSTEM: 'SYSTEM',
  MESSAGE: 'MESSAGE',
  QUERY_COMPLETE: 'QUERY_COMPLETE',
  QUERY_IN_PROGRESS: 'QUERY_IN_PROGRESS',
  QUERY_FAILED: 'QUERY_FAILED',
  REPORT_GENERATED: 'REPORT_GENERATED'
};

exports.Prisma.ModelName = {
  Account: 'Account',
  ClientActivity: 'ClientActivity',
  ClientSatisfaction: 'ClientSatisfaction',
  Company: 'Company',
  Conversation: 'Conversation',
  EmailCampaign: 'EmailCampaign',
  EmailCampaignContent: 'EmailCampaignContent',
  EmailCampaignDailyStats: 'EmailCampaignDailyStats',
  EmailClient: 'EmailClient',
  EmailClientCredentials: 'EmailClientCredentials',
  EmailGlobalDailyStats: 'EmailGlobalDailyStats',
  GaAccount: 'GaAccount',
  GaProperty: 'GaProperty',
  GaImportRun: 'GaImportRun',
  GaKpiDaily: 'GaKpiDaily',
  GaKpiMonthly: 'GaKpiMonthly',
  GaChannelDaily: 'GaChannelDaily',
  GaSourceDaily: 'GaSourceDaily',
  Log: 'Log',
  Memory: 'Memory',
  Message: 'Message',
  MessageAttachment: 'MessageAttachment',
  Notification: 'Notification',
  ParsedPieGraphData: 'ParsedPieGraphData',
  ParsedQueryData: 'ParsedQueryData',
  ParsedQuerySummary: 'ParsedQuerySummary',
  Query: 'Query',
  Role: 'Role',
  Session: 'Session',
  SproutFacebookAnalytics: 'SproutFacebookAnalytics',
  SproutFacebookPost: 'SproutFacebookPost',
  SproutFacebookPostAnalytics: 'SproutFacebookPostAnalytics',
  SproutInstagramAnalytics: 'SproutInstagramAnalytics',
  SproutInstagramFollowersByCity: 'SproutInstagramFollowersByCity',
  SproutInstagramFollowersByCountry: 'SproutInstagramFollowersByCountry',
  SproutLinkedInAnalytics: 'SproutLinkedInAnalytics',
  SproutPinterestAnalytics: 'SproutPinterestAnalytics',
  SproutSocialAccount: 'SproutSocialAccount',
  Ticket: 'Ticket',
  TicketAttachment: 'TicketAttachment',
  TicketComment: 'TicketComment',
  TicketTag: 'TicketTag',
  UserToSproutSocialAccount: 'UserToSproutSocialAccount',
  UserToGaAccount: 'UserToGaAccount',
  User: 'User',
  UserSettings: 'UserSettings',
  UserToEmailClient: 'UserToEmailClient',
  UserToUspsClient: 'UserToUspsClient',
  UspsCampaign: 'UspsCampaign',
  UspsCampaignSummary: 'UspsCampaignSummary',
  UspsCampaignZipStats: 'UspsCampaignZipStats',
  UspsClient: 'UspsClient',
  VerificationToken: 'VerificationToken'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/jasonshultz/Projects/marvin-project/kirk-frontend/src/prisma/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/jasonshultz/Projects/marvin-project/kirk-frontend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../src/prisma/generated/client\"\n  binaryTargets = [\"native\", \"debian-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Account {\n  id                String   @id @default(cuid())\n  userId            String\n  type              String\n  provider          String\n  providerAccountId String\n  refresh_token     String?\n  access_token      String?\n  expires_at        Int?\n  token_type        String?\n  scope             String?\n  id_token          String?\n  session_state     String?\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @default(now()) @updatedAt\n  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n}\n\nmodel ClientActivity {\n  id          String         @id @default(cuid())\n  type        String\n  description String\n  status      ActivityStatus @default(SUCCESS)\n  metadata    Json?\n  createdAt   DateTime       @default(now())\n  updatedAt   DateTime       @updatedAt\n  userId      String\n  user        User           @relation(fields: [userId], references: [id])\n\n  @@index([userId])\n  @@index([type])\n  @@index([createdAt])\n}\n\nmodel ClientSatisfaction {\n  id           String   @id @default(cuid())\n  rating       Float\n  feedback     String?\n  userId       String\n  accountRepId String\n  createdAt    DateTime @default(now())\n  accountRep   User     @relation(\"RepRatings\", fields: [accountRepId], references: [id])\n  user         User     @relation(\"ClientRatings\", fields: [userId], references: [id])\n\n  @@index([userId])\n  @@index([accountRepId])\n}\n\nmodel Company {\n  id        String   @id @default(cuid())\n  name      String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  users     User[]\n}\n\nmodel Conversation {\n  id           String      @id @default(cuid())\n  title        String\n  isStarred    Boolean     @default(false)\n  createdAt    DateTime    @default(now())\n  updatedAt    DateTime    @updatedAt\n  userId       String\n  description  String?\n  gaAccountId  String?\n  gaPropertyId String?\n  clientId     String?\n  client       User?       @relation(\"ClientConversations\", fields: [clientId], references: [id])\n  gaAccount    GaAccount?  @relation(fields: [gaAccountId], references: [id])\n  gaProperty   GaProperty? @relation(fields: [gaPropertyId], references: [id])\n  user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)\n  queries      Query[]\n\n  @@index([userId])\n  @@index([isStarred])\n  @@index([clientId])\n}\n\nmodel EmailCampaign {\n  id                      String                    @id @default(cuid())\n  createdAt               DateTime                  @default(now())\n  updatedAt               DateTime                  @updatedAt\n  campaignId              String                    @unique\n  campaignName            String\n  emailClientId           String\n  emailClient             EmailClient               @relation(fields: [emailClientId], references: [id])\n  emailCampaignContents   EmailCampaignContent?\n  emailCampaignDailyStats EmailCampaignDailyStats[]\n}\n\nmodel EmailCampaignContent {\n  id              String        @id @default(cuid())\n  subject         String\n  type            String\n  recipients      Int           @default(0)\n  createdAt       DateTime      @default(now())\n  updatedAt       DateTime      @updatedAt\n  contentType     String\n  createTime      DateTime\n  emailCampaignId String        @unique\n  htmlContent     String\n  plainContent    String\n  sendTime        DateTime\n  webId           String\n  emailCampaign   EmailCampaign @relation(fields: [emailCampaignId], references: [id])\n}\n\nmodel EmailCampaignDailyStats {\n  id                         String        @id @default(cuid())\n  date                       DateTime      @db.Date\n  opens                      Int           @default(0)\n  clicks                     Int           @default(0)\n  bounces                    Int           @default(0)\n  unsubscribes               Int           @default(0)\n  variation                  String\n  phase                      String\n  requests                   Int           @default(0)\n  delivered                  Int           @default(0)\n  createdAt                  DateTime      @default(now())\n  updatedAt                  DateTime      @updatedAt\n  bounceDrops                Int           @default(0)\n  cumulativeBounceRate       Int           @default(0)\n  cumulativeSpamReportsRate  Int           @default(0)\n  cumulativeTotalClickRate   Int           @default(0)\n  cumulativeTotalOpenRate    Int           @default(0)\n  cumulativeUniqueClickRate  Int           @default(0)\n  cumulativeUniqueOpenRate   Int           @default(0)\n  cumulativeUnsubscribeRate  Int           @default(0)\n  dailyBounceRate            Int           @default(0)\n  dailySpamReportsRate       Int           @default(0)\n  dailyTotalClickRate        Int           @default(0)\n  dailyTotalClickToOpenRate  Int           @default(0)\n  dailyTotalOpenRate         Int           @default(0)\n  dailyUniqueClickRate       Int           @default(0)\n  dailyUniqueClickToOpenRate Int           @default(0)\n  dailyUniqueOpenRate        Int           @default(0)\n  dailyUnsubscribeRate       Int           @default(0)\n  emailCampaignId            String\n  emailClientId              String\n  singleSendName             String\n  spamReportDrops            Int           @default(0)\n  spamReports                Int           @default(0)\n  totalClicks                Int           @default(0)\n  totalOpens                 Int           @default(0)\n  uniqueClicks               Int           @default(0)\n  uniqueOpens                Int           @default(0)\n  emailCampaign              EmailCampaign @relation(fields: [emailCampaignId], references: [campaignId])\n  emailClient                EmailClient   @relation(fields: [emailClientId], references: [id])\n\n  @@unique([emailCampaignId, date])\n}\n\nmodel EmailClient {\n  id                      String                    @id @default(cuid())\n  createdAt               DateTime                  @default(now())\n  updatedAt               DateTime                  @updatedAt\n  clientName              String\n  emailCampaigns          EmailCampaign[]\n  emailCampaignDailyStats EmailCampaignDailyStats[]\n  emailClientCredentials  EmailClientCredentials[]\n  emailGlobalDailyStats   EmailGlobalDailyStats[]\n  users                   UserToEmailClient[]\n}\n\nmodel EmailClientCredentials {\n  id            String      @id @default(cuid())\n  createdAt     DateTime    @default(now())\n  updatedAt     DateTime    @updatedAt\n  apiKey        String\n  emailClientId String\n  platformName  String\n  emailClient   EmailClient @relation(fields: [emailClientId], references: [id])\n\n  @@unique([emailClientId, platformName])\n}\n\nmodel EmailGlobalDailyStats {\n  id            String      @id @default(cuid())\n  date          DateTime    @db.Date\n  createdAt     DateTime    @default(now())\n  updatedAt     DateTime    @updatedAt\n  bounces       Int         @default(0)\n  clicks        Int         @default(0)\n  emailClientId String\n  opens         Int         @default(0)\n  unsubs        Int         @default(0)\n  emailClient   EmailClient @relation(fields: [emailClientId], references: [id])\n\n  @@unique([emailClientId, date])\n}\n\nmodel GaAccount {\n  id               String            @id @default(cuid())\n  gaAccountId      String            @unique\n  gaAccountName    String\n  deleted          Boolean           @default(false)\n  createdAt        DateTime          @default(now())\n  updatedAt        DateTime          @default(now()) @updatedAt\n  conversations    Conversation[]\n  gaProperties     GaProperty[]      @relation(\"AccountToProperty\")\n  userToGaAccounts UserToGaAccount[] @relation(\"GaAccountToUserAccounts\")\n}\n\nmodel GaProperty {\n  id             String           @id @default(cuid())\n  gaPropertyId   String           @unique\n  gaPropertyName String\n  gaAccountId    String\n  deleted        Boolean          @default(false)\n  createdAt      DateTime         @default(now())\n  updatedAt      DateTime         @default(now()) @updatedAt\n  conversations  Conversation[]\n  channelDaily   GaChannelDaily[]\n  imports        GaImportRun[]\n  kpiDaily       GaKpiDaily[]\n  kpiMonthly     GaKpiMonthly[]\n  gaAccount      GaAccount        @relation(\"AccountToProperty\", fields: [gaAccountId], references: [id], onDelete: Cascade)\n  sourceDaily    GaSourceDaily[]\n}\n\nmodel GaImportRun {\n  id                String       @id @default(cuid())\n  gaPropertyId      String\n  dateStart         DateTime\n  dateEnd           DateTime\n  status            ImportStatus @default(queued)\n  errorMessage      String?\n  requestedByUserId String\n  createdAt         DateTime     @default(now())\n  updatedAt         DateTime     @default(now()) @updatedAt\n  gaProperty        GaProperty   @relation(fields: [gaPropertyId], references: [id], onDelete: Cascade)\n  requestedBy       User         @relation(\"UserToGaImportRuns\", fields: [requestedByUserId], references: [id])\n}\n\nmodel GaKpiDaily {\n  id                        String     @id @default(cuid())\n  gaPropertyId              String\n  date                      DateTime   @db.Date\n  sessions                  Int\n  screenPageViewsPerSession Float\n  engagementRate            Float\n  avgSessionDurationSec     Int\n  goalCompletions           Int\n  goalCompletionRate        Float\n  createdAt                 DateTime   @default(now())\n  updatedAt                 DateTime   @default(now()) @updatedAt\n  gaProperty                GaProperty @relation(fields: [gaPropertyId], references: [id], onDelete: Cascade)\n\n  @@unique([gaPropertyId, date])\n  @@index([date])\n}\n\nmodel GaKpiMonthly {\n  id                        String     @id @default(cuid())\n  gaPropertyId              String\n  month                     Int\n  sessions                  Int\n  screenPageViewsPerSession Float\n  engagementRate            Float\n  avgSessionDurationSec     Int\n  goalCompletions           Int\n  goalCompletionRate        Float\n  createdAt                 DateTime   @default(now())\n  updatedAt                 DateTime   @default(now()) @updatedAt\n  gaProperty                GaProperty @relation(fields: [gaPropertyId], references: [id], onDelete: Cascade)\n\n  @@unique([gaPropertyId, month])\n  @@index([month])\n}\n\nmodel GaChannelDaily {\n  id                        String     @id @default(cuid())\n  gaPropertyId              String\n  date                      DateTime   @db.Date\n  channelGroup              String     @db.VarChar(64)\n  users                     Int        @default(0)\n  newUsers                  Int        @default(0)\n  sessions                  Int\n  screenPageViewsPerSession Float\n  engagementRate            Float\n  avgSessionDurationSec     Int\n  goalCompletions           Int\n  goalCompletionRate        Float\n  createdAt                 DateTime   @default(now())\n  updatedAt                 DateTime   @default(now()) @updatedAt\n  gaProperty                GaProperty @relation(fields: [gaPropertyId], references: [id], onDelete: Cascade)\n\n  @@unique([gaPropertyId, date, channelGroup])\n  @@index([date])\n  @@index([channelGroup])\n}\n\nmodel GaSourceDaily {\n  id                        String     @id @default(cuid())\n  avgSessionDurationSec     Int\n  date                      DateTime   @db.Date\n  engagementRate            Float\n  gaPropertyId              String\n  goalCompletionRate        Float\n  goalCompletions           Int\n  newUsers                  Int        @default(0)\n  screenPageViewsPerSession Float\n  sessions                  Int\n  trafficSource             String     @db.VarChar(64)\n  users                     Int        @default(0)\n  createdAt                 DateTime   @default(now())\n  updatedAt                 DateTime   @default(now()) @updatedAt\n  gaProperty                GaProperty @relation(fields: [gaPropertyId], references: [id], onDelete: Cascade)\n\n  @@unique([gaPropertyId, date, trafficSource])\n  @@index([date])\n  @@index([trafficSource])\n}\n\nmodel Log {\n  id               String  @id @default(cuid())\n  eventMessage     String?\n  eventType        String?\n  errorMessage     String?\n  errorStackTrace  String?\n  message          String?\n  metrics          Json?\n  nodeName         String?\n  payload          Json?\n  queryId          String?\n  query            Query?  @relation(fields: [queryId], references: [id])\n  sourceReferences Json?\n  userId           String?\n  user             User?   @relation(fields: [userId], references: [id])\n  workflowName     String?\n\n  // Environment & Context Fields\n  environment String?\n  serviceName String?\n  version     String?\n\n  // Request/Response Tracking\n  requestId String?\n  sessionId String?\n  ipAddress String?\n  userAgent String?\n\n  // Performance & Monitoring\n  duration    Int?\n  memoryUsage Int?\n  cpuUsage    Float?\n\n  // Security & Audit\n  severity        String?\n  isAuthenticated Boolean?\n  permissions     Json?\n\n  // LLM-Specific Fields\n  modelName   String?\n  tokenUsage  Json?\n  temperature Float?\n  maxTokens   Int?\n\n  // Client-Specific Fields\n  clientId      String?\n  pageUrl       String?\n  componentName String?\n\n  // Enhanced Error Tracking\n  errorCode     String?\n  errorCategory String?\n  retryCount    Int?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @default(now()) @updatedAt\n\n  @@index([userId])\n  @@index([queryId])\n  @@index([createdAt])\n  @@index([environment])\n  @@index([serviceName])\n  @@index([severity])\n  @@index([requestId])\n  @@index([clientId])\n  @@index([errorCode])\n}\n\nmodel Memory {\n  id        String   @id @default(cuid())\n  content   String\n  queryId   String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @default(now()) @updatedAt\n  userId    String\n  user      User     @relation(\"UserToMemory\", fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel Message {\n  id            String              @id @default(cuid())\n  content       String\n  senderId      String\n  recipientId   String\n  isRead        Boolean             @default(false)\n  createdAt     DateTime            @default(now())\n  updatedAt     DateTime            @updatedAt\n  archived      Boolean             @default(false)\n  isThreadStart Boolean             @default(false)\n  parentId      String?\n  threadId      String?\n  parent        Message?            @relation(\"ThreadReplies\", fields: [parentId], references: [id], onDelete: Cascade)\n  replies       Message[]           @relation(\"ThreadReplies\")\n  recipient     User                @relation(\"ReceivedMessages\", fields: [recipientId], references: [id], onDelete: Cascade)\n  sender        User                @relation(\"SentMessages\", fields: [senderId], references: [id], onDelete: Cascade)\n  attachments   MessageAttachment[]\n\n  @@index([senderId])\n  @@index([recipientId])\n  @@index([threadId])\n  @@index([parentId])\n}\n\nmodel MessageAttachment {\n  id        String   @id @default(cuid())\n  filename  String\n  fileSize  Int\n  mimeType  String\n  url       String\n  createdAt DateTime @default(now())\n  messageId String\n  message   Message  @relation(fields: [messageId], references: [id], onDelete: Cascade)\n\n  @@index([messageId])\n}\n\nmodel Notification {\n  id        String           @id @default(cuid())\n  userId    String\n  type      NotificationType\n  title     String\n  content   String\n  isRead    Boolean          @default(false)\n  createdAt DateTime         @default(now())\n  updatedAt DateTime         @default(now()) @updatedAt\n  user      User             @relation(fields: [userId], references: [id])\n\n  @@index([userId])\n  @@index([type])\n}\n\nmodel ParsedPieGraphData {\n  id                     String   @id @default(cuid())\n  queryId                String\n  channel                String\n  source                 String\n  sessions               Int\n  conversionRate         Float\n  conversions            Int\n  bounces                Int\n  prevSessionsDiff       Float\n  prevConversionRateDiff Float\n  prevConversionsDiff    Float\n  prevBouncesDiff        Float\n  yearSessionsDiff       Float\n  yearConversionRateDiff Float\n  yearConversionsDiff    Float\n  yearBouncesDiff        Float\n  createdAt              DateTime @default(now())\n  updatedAt              DateTime @default(now()) @updatedAt\n  query                  Query    @relation(fields: [queryId], references: [id])\n}\n\nmodel ParsedQueryData {\n  id              String   @id @default(cuid())\n  queryId         String\n  date            DateTime\n  channel         String\n  source          String\n  sessions        Int\n  conversionRate  Float\n  conversions     Int\n  bounces         Int\n  createdAt       DateTime @default(now())\n  bounceRate      Float?\n  engagedSessions Int?\n  newUsers        Int?\n  query           Query    @relation(fields: [queryId], references: [id])\n}\n\nmodel ParsedQuerySummary {\n  id                   String   @id @default(cuid())\n  queryId              String\n  date                 DateTime\n  totalEngagedSessions Int\n  averageBounceRate    Float\n  totalNewUsers        Int\n  totalConversions     Int\n  createdAt            DateTime @default(now())\n  query                Query    @relation(fields: [queryId], references: [id], onDelete: Cascade)\n\n  @@index([queryId, date])\n}\n\nmodel Query {\n  id             String               @id @default(cuid())\n  userId         String\n  response       String?\n  createdAt      DateTime             @default(now())\n  updatedAt      DateTime             @default(now()) @updatedAt\n  content        String               @default(\"\")\n  status         QueryStatus          @default(PENDING)\n  conversationId String?\n  rating         Int                  @default(0)\n  metadata       Json?\n  lineGraphData  Json?\n  pieGraphData   Json?\n  parsedPieData  ParsedPieGraphData[]\n  parsedData     ParsedQueryData[]\n  parsedSummary  ParsedQuerySummary[]\n  conversation   Conversation?        @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n  user           User                 @relation(fields: [userId], references: [id])\n  Log            Log[]\n\n  @@index([userId])\n  @@index([status])\n  @@index([conversationId])\n}\n\nmodel Role {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  createdAt DateTime @default(now())\n  updatedAt DateTime @default(now())\n  users     User[]\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  userId       String\n  expires      DateTime\n  sessionToken String   @unique\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel SproutFacebookAnalytics {\n  id                     String              @id @default(cuid())\n  sproutSocialAccountId  String\n  customerProfileId      Int\n  reportingDate          DateTime            @db.Date\n  engagements            Int?                @default(0)\n  impressions            Int?                @default(0)\n  impressionsUnique      Int?                @default(0)\n  followersCount         Int?                @default(0)\n  postContentClicks      Int?                @default(0)\n  postContentClicksOther Int?                @default(0)\n  postLinkClicks         Int?                @default(0)\n  postPhotoViewClicks    Int?                @default(0)\n  tabViews               Int?                @default(0)\n  videoViews             Int?                @default(0)\n  videoViews10s          Int?                @default(0)\n  videoViewsOrganic      Int?                @default(0)\n  videoViewsPaid         Int?                @default(0)\n  videoViewsUnique       Int?                @default(0)\n  createdAt              DateTime            @default(now())\n  updatedAt              DateTime            @default(now()) @updatedAt\n  netFollowerGrowth      Int?                @default(0)\n  sproutSocialAccount    SproutSocialAccount @relation(fields: [sproutSocialAccountId], references: [id], onDelete: Cascade)\n\n  @@unique([customerProfileId, reportingDate])\n  @@index([sproutSocialAccountId])\n}\n\nmodel SproutFacebookPost {\n  id                    String              @id @default(cuid())\n  sproutSocialAccountId String\n  postType              String\n  postStatus            String\n  postLink              String\n  postText              String\n  postNativeId          String\n  postCreatedTime       DateTime\n  postSentTime          DateTime\n  postLastUpdated       DateTime\n  createdAt             DateTime            @default(now())\n  updatedAt             DateTime            @default(now()) @updatedAt\n  sproutSocialAccount   SproutSocialAccount @relation(fields: [sproutSocialAccountId], references: [id], onDelete: Cascade)\n\n  @@unique([sproutSocialAccountId, postNativeId])\n  @@index([sproutSocialAccountId])\n}\n\nmodel SproutFacebookPostAnalytics {\n  id                     String              @id @default(cuid())\n  angryReactions         Int?                @default(0)\n  clientNativeId         String\n  commentsCount          Int?                @default(0)\n  hahaReactions          Int?                @default(0)\n  impressions            Int?                @default(0)\n  impressionsFollower    Int?                @default(0)\n  impressionsNonFollower Int?                @default(0)\n  impressionsNonViral    Int?                @default(0)\n  impressionsOrganic     Int?                @default(0)\n  impressionsPaid        Int?                @default(0)\n  impressionsViral       Int?                @default(0)\n  likes                  Int?                @default(0)\n  loveReactions          Int?                @default(0)\n  postContentClicks      Int?                @default(0)\n  postContentClicksOther Int?                @default(0)\n  postLinkClicks         Int?                @default(0)\n  postNativeId           String\n  postPhotoViewClicks    Int?                @default(0)\n  postVideoPlayClicks    Int?                @default(0)\n  questionAnswers        Int?                @default(0)\n  reach                  Int?                @default(0)\n  reachFollower          Int?                @default(0)\n  reachNonViral          Int?                @default(0)\n  reachOrganic           Int?                @default(0)\n  reachPaid              Int?                @default(0)\n  reachViral             Int?                @default(0)\n  reactions              Int?                @default(0)\n  reportingDate          DateTime            @db.Date\n  sadReactions           Int?                @default(0)\n  sharesCount            Int?                @default(0)\n  sproutSocialAccountId  String\n  videoLength            Int?                @default(0)\n  videoViews             Int?                @default(0)\n  videoViewsAutoplay     Int?                @default(0)\n  videoViewsOrganic      Int?                @default(0)\n  videoViewsPaid         Int?                @default(0)\n  wowReactions           Int?                @default(0)\n  createdAt              DateTime            @default(now())\n  updatedAt              DateTime            @updatedAt\n  sproutSocialAccount    SproutSocialAccount @relation(fields: [sproutSocialAccountId], references: [id], onDelete: Cascade)\n\n  @@unique([postNativeId, reportingDate])\n  @@index([sproutSocialAccountId])\n}\n\nmodel SproutInstagramAnalytics {\n  id                       String                              @id @default(cuid())\n  sproutSocialAccountId    String\n  customerProfileId        Int\n  reportingDate            DateTime                            @db.Date\n  commentsCount            Int?                                @default(0)\n  engagements              Int?                                @default(0)\n  impressions              Int?                                @default(0)\n  impressionsUnique        Int?                                @default(0)\n  followersCount           Int?                                @default(0)\n  likes                    Int?                                @default(0)\n  saves                    Int?                                @default(0)\n  videoViews               Int?                                @default(0)\n  createdAt                DateTime                            @default(now())\n  updatedAt                DateTime                            @updatedAt\n  emailContacts            Int?                                @default(0)\n  getDirectionsClicks      Int?                                @default(0)\n  phoneCallClicks          Int?                                @default(0)\n  postsSendByContentType   Json?\n  postsSentByPostType      Json?\n  postsSentCount           Int?                                @default(0)\n  profileFollowerAdds      Int?                                @default(0)\n  profileFollowers         Int?                                @default(0)\n  profileImpressionsUnique Int?                                @default(0)\n  profileReachUnique       Int?                                @default(0)\n  profileViews             Int?                                @default(0)\n  profileViewsUnique       Int?                                @default(0)\n  websiteClicks            Int?                                @default(0)\n  sproutSocialAccount      SproutSocialAccount                 @relation(fields: [sproutSocialAccountId], references: [id], onDelete: Cascade)\n  followersByCity          SproutInstagramFollowersByCity[]\n  followersByCountry       SproutInstagramFollowersByCountry[]\n\n  @@unique([customerProfileId, reportingDate])\n  @@index([sproutSocialAccountId])\n}\n\nmodel SproutInstagramFollowersByCity {\n  id                         String                   @id @default(cuid())\n  sproutInstagramAnalyticsId String\n  city                       String\n  count                      Int                      @default(0)\n  createdAt                  DateTime                 @default(now())\n  updatedAt                  DateTime                 @updatedAt\n  sproutInstagramAnalytics   SproutInstagramAnalytics @relation(fields: [sproutInstagramAnalyticsId], references: [id], onDelete: Cascade)\n\n  @@unique([sproutInstagramAnalyticsId, city])\n  @@index([sproutInstagramAnalyticsId])\n}\n\nmodel SproutInstagramFollowersByCountry {\n  id                         String                   @id @default(cuid())\n  sproutInstagramAnalyticsId String\n  country                    String\n  count                      Int                      @default(0)\n  createdAt                  DateTime                 @default(now())\n  updatedAt                  DateTime                 @updatedAt\n  sproutInstagramAnalytics   SproutInstagramAnalytics @relation(fields: [sproutInstagramAnalyticsId], references: [id], onDelete: Cascade)\n\n  @@unique([sproutInstagramAnalyticsId, country])\n  @@index([sproutInstagramAnalyticsId])\n}\n\nmodel SproutLinkedInAnalytics {\n  id                    String              @id @default(cuid())\n  sproutSocialAccountId String\n  customerProfileId     Int\n  reportingDate         DateTime            @db.Date\n  engagements           Int?                @default(0)\n  impressions           Int?                @default(0)\n  impressionsUnique     Int?                @default(0)\n  followersCount        Int?                @default(0)\n  reactions             Int?                @default(0)\n  createdAt             DateTime            @default(now())\n  updatedAt             DateTime            @updatedAt\n  sproutSocialAccount   SproutSocialAccount @relation(fields: [sproutSocialAccountId], references: [id], onDelete: Cascade)\n\n  @@unique([customerProfileId, reportingDate])\n  @@index([sproutSocialAccountId])\n}\n\nmodel SproutPinterestAnalytics {\n  id                    String              @id @default(cuid())\n  sproutSocialAccountId String\n  customerProfileId     Int\n  reportingDate         DateTime            @db.Date\n  followersCount        Int?                @default(0)\n  followingCount        Int?                @default(0)\n  createdAt             DateTime            @default(now())\n  updatedAt             DateTime            @updatedAt\n  sproutSocialAccount   SproutSocialAccount @relation(fields: [sproutSocialAccountId], references: [id], onDelete: Cascade)\n\n  @@index([sproutSocialAccountId])\n}\n\nmodel SproutSocialAccount {\n  id                    String                        @id @default(cuid())\n  customerProfileId     Int                           @unique\n  networkType           String\n  name                  String\n  nativeName            String\n  link                  String\n  nativeId              String\n  groups                Int[]\n  createdAt             DateTime                      @default(now())\n  updatedAt             DateTime                      @updatedAt\n  facebookAnalytics     SproutFacebookAnalytics[]\n  facebookPosts         SproutFacebookPost[]\n  facebookPostAnalytics SproutFacebookPostAnalytics[]\n  instagramAnalytics    SproutInstagramAnalytics[]\n  linkedInAnalytics     SproutLinkedInAnalytics[]\n  pinterestAnalytics    SproutPinterestAnalytics[]\n  users                 UserToSproutSocialAccount[]\n}\n\nmodel Ticket {\n  id           String             @id @default(cuid())\n  title        String\n  description  String\n  status       TicketStatus       @default(OPEN)\n  priority     TicketPriority     @default(MEDIUM)\n  createdAt    DateTime           @default(now())\n  updatedAt    DateTime           @updatedAt\n  assignedToId String?\n  clientId     String\n  assignedTo   User?              @relation(\"AssignedTickets\", fields: [assignedToId], references: [id])\n  client       User               @relation(\"ClientTickets\", fields: [clientId], references: [id])\n  attachments  TicketAttachment[]\n  comments     TicketComment[]\n  tags         TicketTag[]        @relation(\"TicketToTicketTag\")\n\n  @@index([status])\n  @@index([priority])\n  @@index([assignedToId])\n  @@index([clientId])\n}\n\nmodel TicketAttachment {\n  id        String   @id @default(cuid())\n  name      String\n  url       String\n  createdAt DateTime @default(now())\n  ticketId  String\n  ticket    Ticket   @relation(fields: [ticketId], references: [id], onDelete: Cascade)\n}\n\nmodel TicketComment {\n  id        String   @id @default(cuid())\n  content   String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  ticketId  String\n  authorId  String\n  author    User     @relation(fields: [authorId], references: [id])\n  ticket    Ticket   @relation(fields: [ticketId], references: [id], onDelete: Cascade)\n}\n\nmodel TicketTag {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  createdAt DateTime @default(now())\n  tickets   Ticket[] @relation(\"TicketToTicketTag\")\n}\n\nmodel UserToSproutSocialAccount {\n  id                    String              @id @default(cuid())\n  userId                String\n  sproutSocialAccountId String\n  createdAt             DateTime            @default(now())\n  updatedAt             DateTime            @updatedAt\n  sproutSocialAccount   SproutSocialAccount @relation(fields: [sproutSocialAccountId], references: [id], onDelete: Cascade)\n  user                  User                @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, sproutSocialAccountId])\n  @@index([userId])\n  @@index([sproutSocialAccountId])\n}\n\nmodel UserToGaAccount {\n  id          String    @id @default(cuid())\n  userId      String\n  gaAccountId String\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  gaAccount   GaAccount @relation(\"GaAccountToUserAccounts\", fields: [gaAccountId], references: [id], onDelete: Cascade)\n  user        User      @relation(\"UserToGaAccounts\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, gaAccountId])\n  @@index([userId])\n  @@index([gaAccountId])\n}\n\nmodel User {\n  id                   String                      @id @default(cuid())\n  email                String?                     @unique\n  createdAt            DateTime                    @default(now())\n  updatedAt            DateTime                    @updatedAt\n  roleId               String\n  emailVerified        DateTime?\n  image                String?\n  name                 String?\n  accountRepId         String?\n  isActive             Boolean                     @default(true)\n  password             String?\n  deleted              Boolean                     @default(false)\n  companyId            String?\n  accounts             Account[]\n  activities           ClientActivity[]\n  receivedRatings      ClientSatisfaction[]        @relation(\"RepRatings\")\n  givenRatings         ClientSatisfaction[]        @relation(\"ClientRatings\")\n  clientConversations  Conversation[]              @relation(\"ClientConversations\")\n  conversations        Conversation[]\n  gaImportRuns         GaImportRun[]               @relation(\"UserToGaImportRuns\")\n  receivedMessages     Message[]                   @relation(\"ReceivedMessages\")\n  sentMessages         Message[]                   @relation(\"SentMessages\")\n  notifications        Notification[]\n  queries              Query[]\n  sessions             Session[]\n  assignedTickets      Ticket[]                    @relation(\"AssignedTickets\")\n  clientTickets        Ticket[]                    @relation(\"ClientTickets\")\n  ticketComments       TicketComment[]\n  memories             Memory[]                    @relation(\"UserToMemory\")\n  accountRep           User?                       @relation(\"AccountRepToClient\", fields: [accountRepId], references: [id])\n  clients              User[]                      @relation(\"AccountRepToClient\")\n  company              Company?                    @relation(fields: [companyId], references: [id])\n  role                 Role                        @relation(fields: [roleId], references: [id])\n  settings             UserSettings?\n  emailClients         UserToEmailClient[]\n  sproutSocialAccounts UserToSproutSocialAccount[]\n  userToGaAccounts     UserToGaAccount[]           @relation(\"UserToGaAccounts\")\n  uspsClients          UserToUspsClient[]\n  Log                  Log[]\n}\n\nmodel UserSettings {\n  id                 String   @id @default(cuid())\n  userId             String   @unique\n  emailNotifications Boolean  @default(true)\n  createdAt          DateTime @default(now())\n  updatedAt          DateTime @updatedAt\n  theme              String?\n  apiCredits         Int      @default(0)\n  apiCreditsLimit    Int      @default(1000)\n  user               User     @relation(fields: [userId], references: [id])\n}\n\nmodel UserToEmailClient {\n  id            String      @id @default(cuid())\n  userId        String\n  emailClientId String\n  createdAt     DateTime    @default(now())\n  updatedAt     DateTime    @updatedAt\n  emailClient   EmailClient @relation(fields: [emailClientId], references: [id], onDelete: Cascade)\n  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, emailClientId])\n  @@index([userId])\n  @@index([emailClientId])\n}\n\nmodel UserToUspsClient {\n  id           String     @id @default(cuid())\n  userId       String\n  uspsClientId String\n  createdAt    DateTime   @default(now())\n  updatedAt    DateTime   @updatedAt\n  uspsClient   UspsClient @relation(fields: [uspsClientId], references: [id], onDelete: Cascade) // Clients can have multiple users\n  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade) // Users can be linked to multiple USPS clients\n\n  @@unique([userId, uspsClientId])\n  @@index([userId])\n  @@index([uspsClientId])\n}\n\nmodel UspsCampaign {\n  id                  String                 @id @default(cuid())\n  campaignName        String\n  order               String?\n  reportId            String\n  sector              String?\n  sendDate            DateTime               @db.Date\n  type                String?\n  uspsClientId        String\n  createdAt           DateTime               @default(now())\n  updatedAt           DateTime               @default(now()) @updatedAt\n  uspsCampaignZips    UspsCampaignZipStats[] @relation(\"UspsCampaignToZipStats\")\n  uspsCampaignSummary UspsCampaignSummary[]  @relation(\"UspsCampaignToSummary\")\n  UspsClient          UspsClient             @relation(\"UspsClientToCampaigns\", fields: [uspsClientId], references: [id]) // Campaigns belong to a USPS client\n\n  @@unique([campaignName])\n  @@index([campaignName])\n}\n\nmodel UspsCampaignSummary {\n  id               String       @id @default(cuid())\n  finalScanCount   Int\n  mailDate         DateTime     @db.Date\n  numberDelivered  Int\n  percentDelivered Float\n  percentFinalScan Float\n  percentOnTime    Float\n  percentScanned   Float\n  pieces           Int\n  reportId         String\n  scanDate         DateTime     @db.Date\n  totalScanned     Int\n  uspsCampaignId   String\n  createdAt        DateTime     @default(now())\n  updatedAt        DateTime     @default(now()) @updatedAt\n  UspsCampaign     UspsCampaign @relation(\"UspsCampaignToSummary\", fields: [uspsCampaignId], references: [id])\n\n  @@unique([scanDate, uspsCampaignId])\n  @@index([scanDate, mailDate, uspsCampaignId, reportId])\n}\n\nmodel UspsCampaignZipStats {\n  id             String       @id @default(cuid())\n  date           DateTime     @db.Date\n  scans          Int\n  uspsCampaignId String\n  zipCode        String\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @default(now()) @updatedAt\n  UspsCampaign   UspsCampaign @relation(\"UspsCampaignToZipStats\", fields: [uspsCampaignId], references: [id])\n\n  @@index([uspsCampaignId])\n}\n\nmodel UspsClient {\n  id               String             @id @default(cuid())\n  clientName       String\n  createdAt        DateTime           @default(now())\n  updatedAt        DateTime           @updatedAt\n  uspsCampaigns    UspsCampaign[]     @relation(\"UspsClientToCampaigns\") // Clients can have multiple campaigns\n  UserToUspsClient UserToUspsClient[] // Users can be linked to multiple USPS clients\n}\n\nmodel VerificationToken {\n  identifier String\n  token      String   @unique\n  expires    DateTime\n\n  @@unique([identifier, token])\n}\n\nenum ImportStatus {\n  queued\n  ok\n  error\n}\n\nenum TicketStatus {\n  OPEN\n  IN_PROGRESS\n  RESOLVED\n}\n\nenum TicketPriority {\n  LOW\n  MEDIUM\n  HIGH\n}\n\nenum ActivityStatus {\n  SUCCESS\n  ERROR\n  PENDING\n}\n\nenum QueryStatus {\n  PENDING\n  IN_PROGRESS\n  COMPLETED\n  FAILED\n}\n\nenum NotificationType {\n  SYSTEM\n  MESSAGE\n  QUERY_COMPLETE\n  QUERY_IN_PROGRESS\n  QUERY_FAILED\n  REPORT_GENERATED\n}\n",
  "inlineSchemaHash": "2edab2e12566b80aa845a3fed331a6419a9fe5cb841d9a1fad241f4da8e654e0",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"ClientActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ActivityStatus\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClientActivityToUser\"}],\"dbName\":null},\"ClientSatisfaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountRepId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accountRep\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RepRatings\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClientRatings\"}],\"dbName\":null},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyToUser\"}],\"dbName\":null},\"Conversation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isStarred\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gaAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gaPropertyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClientConversations\"},{\"name\":\"gaAccount\",\"kind\":\"object\",\"type\":\"GaAccount\",\"relationName\":\"ConversationToGaAccount\"},{\"name\":\"gaProperty\",\"kind\":\"object\",\"type\":\"GaProperty\",\"relationName\":\"ConversationToGaProperty\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ConversationToUser\"},{\"name\":\"queries\",\"kind\":\"object\",\"type\":\"Query\",\"relationName\":\"ConversationToQuery\"}],\"dbName\":null},\"EmailCampaign\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"campaignId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"campaignName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailClientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailClient\",\"kind\":\"object\",\"type\":\"EmailClient\",\"relationName\":\"EmailCampaignToEmailClient\"},{\"name\":\"emailCampaignContents\",\"kind\":\"object\",\"type\":\"EmailCampaignContent\",\"relationName\":\"EmailCampaignToEmailCampaignContent\"},{\"name\":\"emailCampaignDailyStats\",\"kind\":\"object\",\"type\":\"EmailCampaignDailyStats\",\"relationName\":\"EmailCampaignToEmailCampaignDailyStats\"}],\"dbName\":null},\"EmailCampaignContent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipients\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"emailCampaignId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"htmlContent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plainContent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sendTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"webId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailCampaign\",\"kind\":\"object\",\"type\":\"EmailCampaign\",\"relationName\":\"EmailCampaignToEmailCampaignContent\"}],\"dbName\":null},\"EmailCampaignDailyStats\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"opens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bounces\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unsubscribes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"variation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phase\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requests\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"delivered\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bounceDrops\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cumulativeBounceRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cumulativeSpamReportsRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cumulativeTotalClickRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cumulativeTotalOpenRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cumulativeUniqueClickRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cumulativeUniqueOpenRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cumulativeUnsubscribeRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dailyBounceRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dailySpamReportsRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dailyTotalClickRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dailyTotalClickToOpenRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dailyTotalOpenRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dailyUniqueClickRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dailyUniqueClickToOpenRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dailyUniqueOpenRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dailyUnsubscribeRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"emailCampaignId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailClientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"singleSendName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"spamReportDrops\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"spamReports\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalOpens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uniqueClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uniqueOpens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"emailCampaign\",\"kind\":\"object\",\"type\":\"EmailCampaign\",\"relationName\":\"EmailCampaignToEmailCampaignDailyStats\"},{\"name\":\"emailClient\",\"kind\":\"object\",\"type\":\"EmailClient\",\"relationName\":\"EmailCampaignDailyStatsToEmailClient\"}],\"dbName\":null},\"EmailClient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"clientName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailCampaigns\",\"kind\":\"object\",\"type\":\"EmailCampaign\",\"relationName\":\"EmailCampaignToEmailClient\"},{\"name\":\"emailCampaignDailyStats\",\"kind\":\"object\",\"type\":\"EmailCampaignDailyStats\",\"relationName\":\"EmailCampaignDailyStatsToEmailClient\"},{\"name\":\"emailClientCredentials\",\"kind\":\"object\",\"type\":\"EmailClientCredentials\",\"relationName\":\"EmailClientToEmailClientCredentials\"},{\"name\":\"emailGlobalDailyStats\",\"kind\":\"object\",\"type\":\"EmailGlobalDailyStats\",\"relationName\":\"EmailClientToEmailGlobalDailyStats\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"UserToEmailClient\",\"relationName\":\"EmailClientToUserToEmailClient\"}],\"dbName\":null},\"EmailClientCredentials\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"apiKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailClientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platformName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailClient\",\"kind\":\"object\",\"type\":\"EmailClient\",\"relationName\":\"EmailClientToEmailClientCredentials\"}],\"dbName\":null},\"EmailGlobalDailyStats\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bounces\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"emailClientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"opens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unsubs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"emailClient\",\"kind\":\"object\",\"type\":\"EmailClient\",\"relationName\":\"EmailClientToEmailGlobalDailyStats\"}],\"dbName\":null},\"GaAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gaAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gaAccountName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversations\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToGaAccount\"},{\"name\":\"gaProperties\",\"kind\":\"object\",\"type\":\"GaProperty\",\"relationName\":\"AccountToProperty\"},{\"name\":\"userToGaAccounts\",\"kind\":\"object\",\"type\":\"UserToGaAccount\",\"relationName\":\"GaAccountToUserAccounts\"}],\"dbName\":null},\"GaProperty\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gaPropertyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gaPropertyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gaAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversations\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToGaProperty\"},{\"name\":\"channelDaily\",\"kind\":\"object\",\"type\":\"GaChannelDaily\",\"relationName\":\"GaChannelDailyToGaProperty\"},{\"name\":\"imports\",\"kind\":\"object\",\"type\":\"GaImportRun\",\"relationName\":\"GaImportRunToGaProperty\"},{\"name\":\"kpiDaily\",\"kind\":\"object\",\"type\":\"GaKpiDaily\",\"relationName\":\"GaKpiDailyToGaProperty\"},{\"name\":\"kpiMonthly\",\"kind\":\"object\",\"type\":\"GaKpiMonthly\",\"relationName\":\"GaKpiMonthlyToGaProperty\"},{\"name\":\"gaAccount\",\"kind\":\"object\",\"type\":\"GaAccount\",\"relationName\":\"AccountToProperty\"},{\"name\":\"sourceDaily\",\"kind\":\"object\",\"type\":\"GaSourceDaily\",\"relationName\":\"GaPropertyToGaSourceDaily\"}],\"dbName\":null},\"GaImportRun\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gaPropertyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dateEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ImportStatus\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestedByUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gaProperty\",\"kind\":\"object\",\"type\":\"GaProperty\",\"relationName\":\"GaImportRunToGaProperty\"},{\"name\":\"requestedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToGaImportRuns\"}],\"dbName\":null},\"GaKpiDaily\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gaPropertyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"screenPageViewsPerSession\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"engagementRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"avgSessionDurationSec\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"goalCompletions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"goalCompletionRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gaProperty\",\"kind\":\"object\",\"type\":\"GaProperty\",\"relationName\":\"GaKpiDailyToGaProperty\"}],\"dbName\":null},\"GaKpiMonthly\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gaPropertyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"month\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sessions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"screenPageViewsPerSession\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"engagementRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"avgSessionDurationSec\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"goalCompletions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"goalCompletionRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gaProperty\",\"kind\":\"object\",\"type\":\"GaProperty\",\"relationName\":\"GaKpiMonthlyToGaProperty\"}],\"dbName\":null},\"GaChannelDaily\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gaPropertyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"channelGroup\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"newUsers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sessions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"screenPageViewsPerSession\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"engagementRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"avgSessionDurationSec\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"goalCompletions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"goalCompletionRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gaProperty\",\"kind\":\"object\",\"type\":\"GaProperty\",\"relationName\":\"GaChannelDailyToGaProperty\"}],\"dbName\":null},\"GaSourceDaily\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avgSessionDurationSec\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"engagementRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"gaPropertyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"goalCompletionRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"goalCompletions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"newUsers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"screenPageViewsPerSession\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sessions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"trafficSource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gaProperty\",\"kind\":\"object\",\"type\":\"GaProperty\",\"relationName\":\"GaPropertyToGaSourceDaily\"}],\"dbName\":null},\"Log\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorStackTrace\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metrics\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"nodeName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"queryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"query\",\"kind\":\"object\",\"type\":\"Query\",\"relationName\":\"LogToQuery\"},{\"name\":\"sourceReferences\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LogToUser\"},{\"name\":\"workflowName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"environment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"memoryUsage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cpuUsage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"severity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAuthenticated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"modelName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokenUsage\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"temperature\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"maxTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"componentName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorCategory\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"retryCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Memory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"queryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToMemory\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"archived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isThreadStart\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"threadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ThreadReplies\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ThreadReplies\"},{\"name\":\"recipient\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReceivedMessages\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SentMessages\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"MessageAttachment\",\"relationName\":\"MessageToMessageAttachment\"}],\"dbName\":null},\"MessageAttachment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToMessageAttachment\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":null},\"ParsedPieGraphData\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"queryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conversionRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"conversions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bounces\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"prevSessionsDiff\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"prevConversionRateDiff\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"prevConversionsDiff\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"prevBouncesDiff\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"yearSessionsDiff\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"yearConversionRateDiff\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"yearConversionsDiff\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"yearBouncesDiff\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"query\",\"kind\":\"object\",\"type\":\"Query\",\"relationName\":\"ParsedPieGraphDataToQuery\"}],\"dbName\":null},\"ParsedQueryData\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"queryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"channel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conversionRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"conversions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bounces\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bounceRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"engagedSessions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"newUsers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"query\",\"kind\":\"object\",\"type\":\"Query\",\"relationName\":\"ParsedQueryDataToQuery\"}],\"dbName\":null},\"ParsedQuerySummary\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"queryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalEngagedSessions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"averageBounceRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalNewUsers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalConversions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"query\",\"kind\":\"object\",\"type\":\"Query\",\"relationName\":\"ParsedQuerySummaryToQuery\"}],\"dbName\":null},\"Query\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"QueryStatus\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lineGraphData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"pieGraphData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"parsedPieData\",\"kind\":\"object\",\"type\":\"ParsedPieGraphData\",\"relationName\":\"ParsedPieGraphDataToQuery\"},{\"name\":\"parsedData\",\"kind\":\"object\",\"type\":\"ParsedQueryData\",\"relationName\":\"ParsedQueryDataToQuery\"},{\"name\":\"parsedSummary\",\"kind\":\"object\",\"type\":\"ParsedQuerySummary\",\"relationName\":\"ParsedQuerySummaryToQuery\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToQuery\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QueryToUser\"},{\"name\":\"Log\",\"kind\":\"object\",\"type\":\"Log\",\"relationName\":\"LogToQuery\"}],\"dbName\":null},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RoleToUser\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"SproutFacebookAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sproutSocialAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerProfileId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reportingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"engagements\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressionsUnique\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"followersCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postContentClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postContentClicksOther\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postLinkClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postPhotoViewClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tabViews\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"videoViews\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"videoViews10s\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"videoViewsOrganic\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"videoViewsPaid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"videoViewsUnique\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"netFollowerGrowth\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sproutSocialAccount\",\"kind\":\"object\",\"type\":\"SproutSocialAccount\",\"relationName\":\"SproutFacebookAnalyticsToSproutSocialAccount\"}],\"dbName\":null},\"SproutFacebookPost\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sproutSocialAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postNativeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postCreatedTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"postSentTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"postLastUpdated\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sproutSocialAccount\",\"kind\":\"object\",\"type\":\"SproutSocialAccount\",\"relationName\":\"SproutFacebookPostToSproutSocialAccount\"}],\"dbName\":null},\"SproutFacebookPostAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"angryReactions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clientNativeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commentsCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hahaReactions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressionsFollower\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressionsNonFollower\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressionsNonViral\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressionsOrganic\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressionsPaid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressionsViral\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"likes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"loveReactions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postContentClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postContentClicksOther\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postLinkClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postNativeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postPhotoViewClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postVideoPlayClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"questionAnswers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reach\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reachFollower\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reachNonViral\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reachOrganic\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reachPaid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reachViral\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reactions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reportingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sadReactions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sharesCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sproutSocialAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"videoLength\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"videoViews\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"videoViewsAutoplay\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"videoViewsOrganic\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"videoViewsPaid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"wowReactions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sproutSocialAccount\",\"kind\":\"object\",\"type\":\"SproutSocialAccount\",\"relationName\":\"SproutFacebookPostAnalyticsToSproutSocialAccount\"}],\"dbName\":null},\"SproutInstagramAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sproutSocialAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerProfileId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reportingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"commentsCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"engagements\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressionsUnique\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"followersCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"likes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"saves\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"videoViews\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"emailContacts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"getDirectionsClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"phoneCallClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postsSendByContentType\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"postsSentByPostType\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"postsSentCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profileFollowerAdds\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profileFollowers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profileImpressionsUnique\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profileReachUnique\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profileViews\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profileViewsUnique\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"websiteClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sproutSocialAccount\",\"kind\":\"object\",\"type\":\"SproutSocialAccount\",\"relationName\":\"SproutInstagramAnalyticsToSproutSocialAccount\"},{\"name\":\"followersByCity\",\"kind\":\"object\",\"type\":\"SproutInstagramFollowersByCity\",\"relationName\":\"SproutInstagramAnalyticsToSproutInstagramFollowersByCity\"},{\"name\":\"followersByCountry\",\"kind\":\"object\",\"type\":\"SproutInstagramFollowersByCountry\",\"relationName\":\"SproutInstagramAnalyticsToSproutInstagramFollowersByCountry\"}],\"dbName\":null},\"SproutInstagramFollowersByCity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sproutInstagramAnalyticsId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sproutInstagramAnalytics\",\"kind\":\"object\",\"type\":\"SproutInstagramAnalytics\",\"relationName\":\"SproutInstagramAnalyticsToSproutInstagramFollowersByCity\"}],\"dbName\":null},\"SproutInstagramFollowersByCountry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sproutInstagramAnalyticsId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sproutInstagramAnalytics\",\"kind\":\"object\",\"type\":\"SproutInstagramAnalytics\",\"relationName\":\"SproutInstagramAnalyticsToSproutInstagramFollowersByCountry\"}],\"dbName\":null},\"SproutLinkedInAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sproutSocialAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerProfileId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reportingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"engagements\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressionsUnique\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"followersCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reactions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sproutSocialAccount\",\"kind\":\"object\",\"type\":\"SproutSocialAccount\",\"relationName\":\"SproutLinkedInAnalyticsToSproutSocialAccount\"}],\"dbName\":null},\"SproutPinterestAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sproutSocialAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerProfileId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reportingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"followersCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"followingCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sproutSocialAccount\",\"kind\":\"object\",\"type\":\"SproutSocialAccount\",\"relationName\":\"SproutPinterestAnalyticsToSproutSocialAccount\"}],\"dbName\":null},\"SproutSocialAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerProfileId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"networkType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nativeName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nativeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"groups\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"facebookAnalytics\",\"kind\":\"object\",\"type\":\"SproutFacebookAnalytics\",\"relationName\":\"SproutFacebookAnalyticsToSproutSocialAccount\"},{\"name\":\"facebookPosts\",\"kind\":\"object\",\"type\":\"SproutFacebookPost\",\"relationName\":\"SproutFacebookPostToSproutSocialAccount\"},{\"name\":\"facebookPostAnalytics\",\"kind\":\"object\",\"type\":\"SproutFacebookPostAnalytics\",\"relationName\":\"SproutFacebookPostAnalyticsToSproutSocialAccount\"},{\"name\":\"instagramAnalytics\",\"kind\":\"object\",\"type\":\"SproutInstagramAnalytics\",\"relationName\":\"SproutInstagramAnalyticsToSproutSocialAccount\"},{\"name\":\"linkedInAnalytics\",\"kind\":\"object\",\"type\":\"SproutLinkedInAnalytics\",\"relationName\":\"SproutLinkedInAnalyticsToSproutSocialAccount\"},{\"name\":\"pinterestAnalytics\",\"kind\":\"object\",\"type\":\"SproutPinterestAnalytics\",\"relationName\":\"SproutPinterestAnalyticsToSproutSocialAccount\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"UserToSproutSocialAccount\",\"relationName\":\"SproutSocialAccountToUserToSproutSocialAccount\"}],\"dbName\":null},\"Ticket\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TicketStatus\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"TicketPriority\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"assignedToId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedTo\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AssignedTickets\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClientTickets\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"TicketAttachment\",\"relationName\":\"TicketToTicketAttachment\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"TicketComment\",\"relationName\":\"TicketToTicketComment\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"TicketTag\",\"relationName\":\"TicketToTicketTag\"}],\"dbName\":null},\"TicketAttachment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ticketId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ticket\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"TicketToTicketAttachment\"}],\"dbName\":null},\"TicketComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ticketId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TicketCommentToUser\"},{\"name\":\"ticket\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"TicketToTicketComment\"}],\"dbName\":null},\"TicketTag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"TicketToTicketTag\"}],\"dbName\":null},\"UserToSproutSocialAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sproutSocialAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sproutSocialAccount\",\"kind\":\"object\",\"type\":\"SproutSocialAccount\",\"relationName\":\"SproutSocialAccountToUserToSproutSocialAccount\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserToSproutSocialAccount\"}],\"dbName\":null},\"UserToGaAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gaAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gaAccount\",\"kind\":\"object\",\"type\":\"GaAccount\",\"relationName\":\"GaAccountToUserAccounts\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToGaAccounts\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountRepId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"ClientActivity\",\"relationName\":\"ClientActivityToUser\"},{\"name\":\"receivedRatings\",\"kind\":\"object\",\"type\":\"ClientSatisfaction\",\"relationName\":\"RepRatings\"},{\"name\":\"givenRatings\",\"kind\":\"object\",\"type\":\"ClientSatisfaction\",\"relationName\":\"ClientRatings\"},{\"name\":\"clientConversations\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ClientConversations\"},{\"name\":\"conversations\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToUser\"},{\"name\":\"gaImportRuns\",\"kind\":\"object\",\"type\":\"GaImportRun\",\"relationName\":\"UserToGaImportRuns\"},{\"name\":\"receivedMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ReceivedMessages\"},{\"name\":\"sentMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"SentMessages\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"queries\",\"kind\":\"object\",\"type\":\"Query\",\"relationName\":\"QueryToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"assignedTickets\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"AssignedTickets\"},{\"name\":\"clientTickets\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"ClientTickets\"},{\"name\":\"ticketComments\",\"kind\":\"object\",\"type\":\"TicketComment\",\"relationName\":\"TicketCommentToUser\"},{\"name\":\"memories\",\"kind\":\"object\",\"type\":\"Memory\",\"relationName\":\"UserToMemory\"},{\"name\":\"accountRep\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountRepToClient\"},{\"name\":\"clients\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountRepToClient\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToUser\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUser\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"UserSettings\",\"relationName\":\"UserToUserSettings\"},{\"name\":\"emailClients\",\"kind\":\"object\",\"type\":\"UserToEmailClient\",\"relationName\":\"UserToUserToEmailClient\"},{\"name\":\"sproutSocialAccounts\",\"kind\":\"object\",\"type\":\"UserToSproutSocialAccount\",\"relationName\":\"UserToUserToSproutSocialAccount\"},{\"name\":\"userToGaAccounts\",\"kind\":\"object\",\"type\":\"UserToGaAccount\",\"relationName\":\"UserToGaAccounts\"},{\"name\":\"uspsClients\",\"kind\":\"object\",\"type\":\"UserToUspsClient\",\"relationName\":\"UserToUserToUspsClient\"},{\"name\":\"Log\",\"kind\":\"object\",\"type\":\"Log\",\"relationName\":\"LogToUser\"}],\"dbName\":null},\"UserSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"theme\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiCredits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"apiCreditsLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSettings\"}],\"dbName\":null},\"UserToEmailClient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailClientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"emailClient\",\"kind\":\"object\",\"type\":\"EmailClient\",\"relationName\":\"EmailClientToUserToEmailClient\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserToEmailClient\"}],\"dbName\":null},\"UserToUspsClient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uspsClientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uspsClient\",\"kind\":\"object\",\"type\":\"UspsClient\",\"relationName\":\"UserToUspsClientToUspsClient\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserToUspsClient\"}],\"dbName\":null},\"UspsCampaign\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"campaignName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reportId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sector\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sendDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uspsClientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uspsCampaignZips\",\"kind\":\"object\",\"type\":\"UspsCampaignZipStats\",\"relationName\":\"UspsCampaignToZipStats\"},{\"name\":\"uspsCampaignSummary\",\"kind\":\"object\",\"type\":\"UspsCampaignSummary\",\"relationName\":\"UspsCampaignToSummary\"},{\"name\":\"UspsClient\",\"kind\":\"object\",\"type\":\"UspsClient\",\"relationName\":\"UspsClientToCampaigns\"}],\"dbName\":null},\"UspsCampaignSummary\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"finalScanCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mailDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"numberDelivered\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"percentDelivered\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"percentFinalScan\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"percentOnTime\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"percentScanned\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pieces\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reportId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scanDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalScanned\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uspsCampaignId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UspsCampaign\",\"kind\":\"object\",\"type\":\"UspsCampaign\",\"relationName\":\"UspsCampaignToSummary\"}],\"dbName\":null},\"UspsCampaignZipStats\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scans\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uspsCampaignId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UspsCampaign\",\"kind\":\"object\",\"type\":\"UspsCampaign\",\"relationName\":\"UspsCampaignToZipStats\"}],\"dbName\":null},\"UspsClient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clientName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uspsCampaigns\",\"kind\":\"object\",\"type\":\"UspsCampaign\",\"relationName\":\"UspsClientToCampaigns\"},{\"name\":\"UserToUspsClient\",\"kind\":\"object\",\"type\":\"UserToUspsClient\",\"relationName\":\"UserToUspsClientToUspsClient\"}],\"dbName\":null},\"VerificationToken\":{\"fields\":[{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

